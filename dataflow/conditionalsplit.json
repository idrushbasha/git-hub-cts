{
	"name": "conditionalsplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee2source",
						"type": "DatasetReference"
					},
					"name": "employee2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2AIA",
						"type": "DatasetReference"
					},
					"name": "AIAsink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2AIA",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2AIA",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2AIA",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "splitbasedondepartments"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          sal as string,",
				"          dep_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee2",
				"employee2 split(equals(dep_id,'1'),",
				"     equals(dep_id,'2'),",
				"     equals(dep_id,'3'),",
				"     disjoint: false) ~> splitbasedondepartments@(AIAemployees, QEAemployees, cdmemployees, otheremployees)",
				"splitbasedondepartments@AIAemployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          name as string,",
				"          column1 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AIAsink1",
				"splitbasedondepartments@QEAemployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          name as string,",
				"          column1 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"splitbasedondepartments@cdmemployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          name as string,",
				"          column1 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"splitbasedondepartments@otheremployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          name as string,",
				"          column1 as string",
				"     ),",
				"     filePattern:'name.csv',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3"
			]
		}
	}
}